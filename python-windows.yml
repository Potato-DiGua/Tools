# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    tags:
      - v*
  pull_request:
    tags:
      - v*

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pyinstaller
    - name: build exe
      run: pyinstaller -F main.py -n tool
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Get Version Name
      uses: actions/github-script@v3
      id: get-version
      with:
        script: |
          const str=process.env.GITHUB_REF;
          return str.substring(str.indexOf("v"));
        result-encoding: string
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # 上传网址，无需改动
        asset_path: dist/tool.exe # 上传路径
        asset_name: tool-${{steps.get-version.outputs.result}}.exe # 资源名
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.3
      with:
        # Artifact name
        name: build
        # A file, directory or wildcard pattern that describes what to upload
        path: |
          build
          dist
